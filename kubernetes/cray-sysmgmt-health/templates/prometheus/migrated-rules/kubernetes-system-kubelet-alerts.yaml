#
# MIT License
#
# (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
{{- if and (index .Values "customRules" "create") (index .Values "customRules" "rules" "kubernetes-system-kubelet") }}
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMRule
metadata:
  name: {{ printf "%s-%s" (include "cray-sysmgmt-health.fullname" .) "kubernetes-system-kubelet" | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "cray-sysmgmt-health.name" . }}
{{ include "cray-sysmgmt-health.labels" . | indent 4 }}
{{- if (index .Values "customRules" "labels") }}
{{ toYaml (index .Values "customRules" "labels") | indent 4 }}
{{- end }}
{{- if (index .Values "customRules" "annotations") }}
  annotations:
{{ toYaml (index .Values "customRules" "annotations") | indent 4 }}
{{- end }}
spec:
  groups:
  - name: kubernetes-system-kubelet
    rules:
    - alert: KubeNodeNotReady
      annotations:
        description: '"{{`{{ $labels.node }}`}}" has been unready for more than 15 minutes.'
        summary: Node is not ready.
      expr: kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"}
        == 0
      for: 15m
      labels:
        severity: warning
        group: prometheus
    - alert: KubeNodeUnreachable
      annotations:
        description: '"{{`{{ $labels.node }}`}}" is unreachable and some workloads may be rescheduled.'
        summary: Node is unreachable.
      expr: (kube_node_spec_taint{job="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"}
        unless ignoring(key,value) kube_node_spec_taint{job="kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"})
        == 1
      for: 15m
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletTooManyPods
      annotations:
        description: >
          Kubelet "{{`{{ $labels.node }}`}}" is running at "{{`{{ $value | humanizePercentage }}`}}"
          of its Pod capacity.
        summary: Kubelet is running at capacity.
      expr: |-
        count by(cluster, node) (
          (kube_pod_status_phase{job="kube-state-metrics",phase="Running"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job="kube-state-metrics"})
        )
        /
        max by(cluster, node) (
          kube_node_status_capacity{job="kube-state-metrics",resource="pods"} != 1
        ) > 0.95
      for: 15m
      labels:
        severity: info
        group: prometheus
    - alert: KubeNodeReadinessFlapping
      annotations:
        description: >
          The readiness status of node "{{`{{ $labels.node }}`}}" has changed
          "{{`{{ $value }}`}}" times in the last 15 minutes.
        summary: Node readiness status is flapping.
      expr: sum(changes(kube_node_status_condition{status="true",condition="Ready"}[15m]))
        by (cluster, node) > 2
      for: 15m
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletPlegDurationHigh
      annotations:
        description: >
          The Kubelet Pod Lifecycle Event Generator has a 99th percentile
          duration of "{{`{{ $value }}`}}" seconds on node "{{`{{ $labels.node }}`}}".
        summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
      expr: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"}
        >= 10
      for: 5m
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletPodStartUpLatencyHigh
      annotations:
        description: >
          Kubelet Pod startup 99th percentile latency is "{{`{{ $value }}`}}" seconds
          on node "{{`{{ $labels.node }}`}}".
        summary: Kubelet Pod startup latency is too high.
      expr: histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="kubelet",
        metrics_path="/metrics"}[5m])) by (cluster, instance, le)) * on(cluster, instance)
        group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"}
        > 60
      for: 15m
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: >
          Client certificate for Kubelet on node "{{`{{ $labels.node }}`}}" expires
          in "{{`{{ $value | humanizeDuration }}`}}".
        summary: Kubelet client certificate is about to expire.
      expr: kubelet_certificate_manager_client_ttl_seconds < 604800
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: >
          Client certificate for Kubelet on node "{{`{{ $labels.node }}`}}" expires
          in "{{`{{ $value | humanizeDuration }}`}}".
        summary: Kubelet client certificate is about to expire.
      expr: kubelet_certificate_manager_client_ttl_seconds < 86400
      labels:
        severity: critical
        group: prometheus
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: >
          Server certificate for Kubelet on node "{{`{{ $labels.node }}`}}" expires
          in "{{`{{ $value | humanizeDuration }}`}}".
        summary: Kubelet server certificate is about to expire.
      expr: kubelet_certificate_manager_server_ttl_seconds < 604800
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: >
          Server certificate for Kubelet on node "{{`{{ $labels.node }}`}}" expires
          in "{{`{{ $value | humanizeDuration }}`}}".
        summary: Kubelet server certificate is about to expire.
      expr: kubelet_certificate_manager_server_ttl_seconds < 86400
      labels:
        severity: critical
        group: prometheus
    - alert: KubeletClientCertificateRenewalErrors
      annotations:
        description: >
          Kubelet on node "{{`{{ $labels.node }}`}}" has failed to renew its client
          certificate ("{{`{{ $value | humanize }}`}}" errors in the last 5 minutes).
        summary: Kubelet has failed to renew its client certificate.
      expr: increase(kubelet_certificate_manager_client_expiration_renew_errors[5m])
        > 0
      for: 15m
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletServerCertificateRenewalErrors
      annotations:
        description: >
          Kubelet on node "{{`{{ $labels.node }}`}}" has failed to renew its server
          certificate ("{{`{{ $value | humanize }}`}}" errors in the last 5 minutes).
        summary: Kubelet has failed to renew its server certificate.
      expr: increase(kubelet_server_expiration_renew_errors[5m]) > 0
      for: 15m
      labels:
        severity: warning
        group: prometheus
    - alert: KubeletDown
      annotations:
        description: 'Kubelet has disappeared from Prometheus target discovery.'
        summary: Target disappeared from Prometheus target discovery.
      expr: absent(up{job="kubelet", metrics_path="/metrics"} == 1)
      for: 15m
      labels:
        severity: critical
        group: prometheus
{{- end }}
