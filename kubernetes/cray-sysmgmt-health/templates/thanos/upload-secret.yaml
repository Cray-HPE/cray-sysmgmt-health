{{- /*
MIT License

(C) Copyright 2023 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-sysmgmt-health.fullname" . }}-patch-thanos-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  ttlSecondsAfterFinished: 86400
  template:
    metadata:
      name: {{ template "cray-sysmgmt-health.fullname" . }}-patch-thanos-secret
    spec:
      restartPolicy: Never
      serviceAccountName: "patch-thanos-secret"
      containers:
        - name: "patch-thanos-secret"
          image: artifactory.algol60.net/csm-docker/stable/docker-kubectl:1.19.15
          imagePullPolicy: Always
          command:
            - '/bin/sh'
          args:
            - '-c'
            - |
              echo "Grabbing keys  from thanos-s3-credentials..."
              access_key=$(kubectl get secrets -n default thanos-s3-credentials -ojsonpath='{.data.access_key}' | base64 -d)
              secret_key=$(kubectl get secrets -n default thanos-s3-credentials -ojsonpath='{.data.secret_key}' | base64 -d)
              echo $access_key
              mkdir -p /root/secret
              cat > /root/secret/inject-secret.yaml <<EOF
              apiVersion: v1
              kind: Secret
              metadata:
                name: thanos-secret
              type: Opaque
              stringData:
                objstorage.yaml: |-
                  type: s3
                  config:
                    bucket: thanos
                    endpoint: "rgw-vip.local"
                    insecure: true
                    access_key: "$access_key"
                    secret_key: "$secret_key"
                    signature_version2: true
                    trace:
                      enable: true
              EOF
              cat /root/secret/inject-secret.yaml
              kubectl delete secrets -n sysmgmt-health thanos-secret --force
              sleep 2
              kubectl apply -n sysmgmt-health -f /root/secret/inject-secret.yaml

